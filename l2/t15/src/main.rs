/// вывод:
/// 5
/// 24
/// 16

fn main() {
    // string-slice захардкоженый в памяти
    let s1 = "hello";

    // String
    let s2 = String::from("hello");

    // вид (view) на String
    let s3 = s2.as_str();

    // 5 байтов: так как в данном случае память используется только для чтения
    // и имеется ввиду размер hard-coded в памяти структуры
    let size_of_s1 = std::mem::size_of_val(s1);

    // 24 байта: сам текст храниться в куче, а функция возращает размер структуры из: указателя - 8 байтов,
    // максимального размера - 8 байтов и текущего размера - 8 байтов
    let size_of_s2 = std::mem::size_of_val(&s2);

    // 16 байтов: так как в данном случае имеется в виду view of String и функция возращает размер структуры из:
    // указателя - 8 байтов и текущего размера - 8 байтов
    let size_of_s3 = std::mem::size_of_val(&s3);

    // 5
    println!("{:?}", size_of_s1);

    // 24
    println!("{:?}", size_of_s2);

    // 16
    println!("{:?}", size_of_s3);

}